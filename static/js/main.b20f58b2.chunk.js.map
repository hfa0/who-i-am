{"version":3,"sources":["assets sync /^/.//.*$","assets/bitmovin.png","assets/etadex.png","assets/hokify.png","components/popover/Popover.tsx","components/header/Header.tsx","components/section/Section.tsx","utils/index.ts","components/about-me/AboutMe.tsx","config/bio.tsx","components/project/Project.tsx","components/project-list/ProjectList.tsx","components/online-projects/OnlineProjects.tsx","components/open-source-projects/OpenSourceProjects.tsx","components/worked-on/WorkedOn.tsx","components/my-info/Accounts.tsx","components/my-info/MyInfo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Popover","props","children","element","className","rest","useState","top","containerPosition","setContainerPosition","show","setShow","wrapper","useRef","handleClickOutside","event","current","contains","target","useEffect","rect","getBoundingClientRect","height","document","addEventListener","removeEventListener","join","ref","onClick","CSSTransition","style","in","timeout","unmountOnExit","classNames","header","name","anchor","Header","head","i","key","href","size","Section","myAge","Math","floor","Date","now","birthday","getTime","AboutMeText","AboutMe","Project","info","logo","width","src","includes","require","link","description","ProjectList","projects","p","OnlineProjects","Projects","onlineProjects","OpenSourceProjects","openSourceProjects","WorkedOn","projectsWorkedOn","iconMap","twitter","AiFillTwitterCircle","instagram","AiOutlineInstagram","github","AiFillGithub","linkedin","AiFillLinkedin","stackshare","RiStackshareLine","npm","DiNpm","stackoverflow","DiStackoverflow","Accounts","Me","accounts","account","a","Icon","MyInfo","image","profession","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b20f58b2.chunk.js","sourcesContent":["var map = {\n\t\"./bitmovin.png\": 31,\n\t\"./etadex.png\": 32,\n\t\"./hokify.png\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 11;","module.exports = __webpack_public_path__ + \"static/media/bitmovin.30718714.png\";","module.exports = __webpack_public_path__ + \"static/media/etadex.9db9f841.png\";","module.exports = __webpack_public_path__ + \"static/media/hokify.b52c55ed.png\";","import React, { useState, useRef, HTMLAttributes, ReactNode, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./Popover.scss\";\n\nexport interface PopoverProps extends HTMLAttributes<HTMLDivElement> {\n  element: ReactNode;\n}\n\ninterface PositionCss {\n  top?: number;\n  left?: number;\n  right?: number;\n}\n\nexport const Popover: React.FC<PopoverProps> = (props) => {\n  const { children, element, className = \"\", ...rest } = props;\n\n  const [containerPosition, setContainerPosition] = useState<PositionCss>({ top: -10000 });\n  const [show, setShow] = useState(false);\n  const wrapper = useRef<HTMLDivElement>(null);\n\n  const handleClickOutside = (event: any) => {\n    if (wrapper.current && !wrapper.current.contains(event.target)) {\n      setShow(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!wrapper.current) return;\n    const rect = wrapper.current.getBoundingClientRect();\n    setContainerPosition({\n      top: rect.height + 3,\n      [\"right\"]: 0,\n    });\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div {...rest} className={[\"popover-container\", className].join(\" \")}>\n      <div ref={wrapper} onClick={() => setShow(!show)} className={\"popover\"}>\n        {element}\n      </div>\n\n      <CSSTransition\n        style={containerPosition}\n        in={show}\n        timeout={300}\n        unmountOnExit\n        classNames={\"popover-transition-container\"}\n      >\n        <div className={\"popover-content-container\"}>{children}</div>\n      </CSSTransition>\n    </div>\n  );\n};\n","import React, { HtmlHTMLAttributes } from \"react\";\nimport \"./Header.scss\";\nimport { Popover } from \"../popover/Popover\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\n\nexport interface HeaderProps extends HtmlHTMLAttributes<HTMLDivElement> {}\n\nconst header = [\n  { name: \"About me\", anchor: \"about-me\" },\n  { name: \"Open source project\", anchor: \"open-source-projects\" },\n  { name: \"Online projects\", anchor: \"online-projects\" },\n  { name: \"Projects worked on\", anchor: \"worked-on\" },\n];\n\nexport const Header: React.FC<HeaderProps> = ({ className }) => {\n  return (\n    <header className={[\"header\", className].join(\" \")}>\n      <ul className=\"header-list\">\n        {header.map((head, i) => (\n          <li key={i}>\n            <a href={`#${head.anchor}`}>{head.name}</a>\n          </li>\n        ))}\n      </ul>\n\n      <div className={\"header-menu-wrapper\"}>\n        <Popover className={\"header-popover\"} element={<GiHamburgerMenu size={30} />}>\n          <div className={\"toggle-menu\"}>\n            {header.map((head, i) => (\n              <div className={\"menu-item\"} key={i}>\n                <a href={`#${head.anchor}`}>{head.name}</a>\n              </div>\n            ))}\n          </div>\n        </Popover>\n      </div>\n    </header>\n  );\n};\n","import React, { HtmlHTMLAttributes } from \"react\";\nimport \"./Section.scss\";\nexport interface SectionProps extends HtmlHTMLAttributes<HTMLDivElement> {\n  name?: string;\n}\n\nexport const Section: React.FC<SectionProps> = ({ name, children, className, ...rest }) => {\n  return (\n    <div className={[\"section\", className].join(\" \")} {...rest}>\n      {name && <div className=\"section-header\">{name}</div>}\n      <div className=\"section-body\">{children}</div>\n    </div>\n  );\n};\n","import { birthday } from \"../config/me.json\";\n\nexport const myAge = () => Math.floor((Date.now() - new Date(birthday).getTime()) / (1000 * 60 * 60 * 24 * 365.25));\n","import React, { HTMLAttributes } from \"react\";\nimport \"./AboutMe.scss\";\nimport { Section } from \"../section/Section\";\nimport bio from \"../../config/bio\";\nimport { myAge } from \"../../utils\";\nexport interface AboutMeProps extends HTMLAttributes<HTMLDivElement> {}\n\nconst AboutMeText = () => {\n  return <span className=\"about-me-text\">{bio()}</span>;\n};\n\nexport const AboutMe: React.FC<AboutMeProps> = (props) => {\n  return (\n    <Section {...props}>\n      <div className=\"about-me\">\n        <AboutMeText />\n      </div>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { myAge } from \"../utils\";\n\nexport default () => (\n  <>\n    <p>Hi visitors, </p>\n    I'm happy you get lost in this jungle of connected networks and finally landed on my page. My name is Husein. I'm{\" \"}\n    {myAge()} years old and I'm a Software Developer.\n    <p>\n      I love to write code, learn new things and read good books. My favorite one is War and Pease. I love the way\n      Tolstoy describes situations and peoples personalities. It's like I have pictures of every single character he\n      mentioned in this book - Just joking. There are so many I couldn't even count them.\n    </p>\n    <p>\n      My greatest idol is Ignatiy Stelletsky. I do really respect people who fight for what makes them happy, even that\n      happiness was finding the truth and he didn't succeed (sorry bro, I can really feel you. These books in that\n      mysteriously lost library from one of the most terrible guys ever lived must be f**ing awesome).\n    </p>\n    <p>\n      My favorite movies are <strong>Interstellar</strong> and <strong>No Country for Old Men</strong>. I'm very\n      fascinated about the universe, maths and physics. And of course, I love computers - how one couldn't? Still, I'm\n      kind of an old-fashioned person. I love greek philosophy and the way antic civilizations viewed the world. From\n      the Mayan to the Babylonian, Egyptian, Hindu and Roman - What we learned in the past will help us improve in the\n      future.\n    </p>\n    <p>\n      When I'm not writing code, I like to explore the world. I like to go to places few people have been. I love\n      beaches, lakes and every place where there is water. I love plants and it makes me happy watching them growing and\n      blooming.\n    </p>\n  </>\n);\n","import React from \"react\";\nimport \"./Project.scss\";\nexport interface ProjectInfo {\n  name: string;\n  logo: string;\n  description: string;\n  link: string;\n}\nexport interface ProjectProps {\n  info: ProjectInfo;\n}\n\nexport const Project: React.FC<ProjectProps> = ({ info }) => {\n  return (\n    <div className=\"project\">\n      <div className={[\"project-logo\", \"project-value\"].join(\" \")}>\n        {info.logo && info.logo !== \"\" && (\n          <img width={30} src={info.logo.includes(\"http\") ? info.logo : require(`../../assets/${info.logo}`)}></img>\n        )}\n      </div>\n      <div className={[\"project-name\", \"project-value\"].join(\" \")}>\n        <a target=\"_blank\" href={info.link}>\n          {info.name}\n        </a>\n      </div>\n      <div className={[\"project-desc\", \"project-value\"].join(\" \")}>{info.description}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ProjectInfo, Project } from \"../project/Project\";\n\nexport interface ProjectListProps {\n  projects: ProjectInfo[];\n}\n\nexport const ProjectList: React.FC<ProjectListProps> = ({ projects }) => {\n  return (\n    <div className=\"project-list\">\n      {projects.map((p, i) => (\n        <Project key={i} info={p}></Project>\n      ))}\n    </div>\n  );\n};\n","import React, { HtmlHTMLAttributes } from \"react\";\nimport { Section } from \"../section/Section\";\nimport \"./OnlineProjects.scss\";\nimport { ProjectList } from \"../project-list/ProjectList\";\nimport Projects from \"../../config/projects.json\";\n\nexport interface OnlineProjectsProps extends HtmlHTMLAttributes<HTMLDivElement> {}\n\nexport const OnlineProjects: React.FC<OnlineProjectsProps> = ({ className, ...rest }) => {\n  return (\n    <Section name={[\"Online projects\", className].join(\" \")} {...rest}>\n      <ProjectList projects={Projects.onlineProjects}></ProjectList>\n    </Section>\n  );\n};\n","import React, { HtmlHTMLAttributes } from \"react\";\nimport { Section } from \"../section/Section\";\nimport \"./OpenSourceProjects.scss\";\nimport { ProjectList } from \"../project-list/ProjectList\";\nimport Projects from \"../../config/projects.json\";\n\nexport interface OpenSourceProjectsProps extends HtmlHTMLAttributes<HTMLDivElement> {}\n\nexport const OpenSourceProjects: React.FC<OpenSourceProjectsProps> = ({ className, ...rest }) => {\n  return (\n    <Section className={className} {...rest} name={\"Open Source Projects\"}>\n      <ProjectList projects={Projects.openSourceProjects}></ProjectList>\n    </Section>\n  );\n};\n","import React, { HtmlHTMLAttributes } from \"react\";\nimport Projects from \"../../config/projects.json\";\nimport { Section } from \"../section/Section\";\nimport \"./WorkedOn.scss\";\nimport { ProjectList } from \"../project-list/ProjectList\";\n\nexport interface WorkedOnProps extends HtmlHTMLAttributes<HTMLDivElement> {}\n\nexport const WorkedOn: React.FC<WorkedOnProps> = ({ className, ...rest }) => {\n  return (\n    <Section className={className} {...rest} name=\"Projects worked on\">\n      <ProjectList projects={Projects.projectsWorkedOn}></ProjectList>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { AiFillGithub, AiOutlineInstagram, AiFillTwitterCircle, AiFillLinkedin } from \"react-icons/ai\";\nimport { DiNpm, DiStackoverflow } from \"react-icons/di\";\nimport { RiStackshareLine } from \"react-icons/ri\";\nimport Me from \"../../config/me.json\";\nexport interface AccountsProps {}\nconst iconMap = {\n  twitter: AiFillTwitterCircle,\n  instagram: AiOutlineInstagram,\n  github: AiFillGithub,\n  linkedin: AiFillLinkedin,\n  stackshare: RiStackshareLine,\n  npm: DiNpm,\n  stackoverflow: DiStackoverflow,\n};\n\nexport const Accounts: React.FC<AccountsProps> = (props) => {\n  return (\n    <div className=\"accounts\">\n      {Object.keys(Me.accounts).map((account, i) => {\n        const a = account as keyof typeof iconMap;\n        if (!Me.accounts[a]) return null;\n        const Icon = iconMap[a];\n        return (\n          <div key={i} className=\"account\">\n            <div className=\"account-logo\">\n              <a target=\"_blank\" href={Me.accounts[a]}>\n                <Icon size={30} className={`${account}-icon`}></Icon>\n              </a>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { HTMLAttributes } from \"react\";\nimport { Section } from \"../section/Section\";\nimport \"./MyInfo.scss\";\nimport { Accounts } from \"./Accounts\";\nimport Me from \"../../config/me.json\";\nimport { myAge } from \"../../utils\";\nexport interface MyInfoProps extends HTMLAttributes<HTMLDivElement> {}\n\nexport const MyInfo: React.FC<MyInfoProps> = ({ className }) => {\n  return (\n    <Section className={className}>\n      <div className=\"my-info-image-container\">\n        <img\n          className=\"my-info-image\"\n          src={Me.image.includes(\"http\") ? Me.image : require(`../../assets/${Me.image}`)}\n        ></img>\n      </div>\n      <div className=\"my-info-me-container\">\n        <div className=\"my-info-me-entry\">\n          <div className=\"my-info-label\">Name</div>\n          <div className={[\"my-info-name\", \"my-info-value\"].join(\" \")}>{Me.name}</div>\n        </div>\n        <div className=\"my-info-me-entry\">\n          <div className=\"my-info-label\">Age</div>\n          <div className={[\"my-info-age\", \"my-info-value\"].join(\" \")}>{myAge()}</div>\n        </div>\n        <div className=\"my-info-me-entry\">\n          <div className=\"my-info-label\">Profession</div>\n          <div className={[\"my-info-profession\", \"my-info-value\"].join(\" \")}>{Me.profession}</div>\n        </div>\n      </div>\n      <Accounts></Accounts>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Header } from \"./components/header/Header\";\nimport { AboutMe } from \"./components/about-me/AboutMe\";\nimport { OnlineProjects } from \"./components/online-projects/OnlineProjects\";\nimport { OpenSourceProjects } from \"./components/open-source-projects/OpenSourceProjects\";\nimport { WorkedOn } from \"./components/worked-on/WorkedOn\";\nimport { MyInfo } from \"./components/my-info/MyInfo\";\n\nfunction App() {\n  return (\n    <>\n      <Header></Header>\n      <div className=\"app-content\">\n        <div className=\"app-content-right\">\n          <MyInfo></MyInfo>\n        </div>\n        <div className=\"app-content-left\">\n          <AboutMe id=\"about-me\"></AboutMe>\n          <OnlineProjects id=\"online-projects\"></OnlineProjects>\n          <OpenSourceProjects id=\"open-source-projects\"></OpenSourceProjects>\n          <WorkedOn id=\"worked-on\"></WorkedOn>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}